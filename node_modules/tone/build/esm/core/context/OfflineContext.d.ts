import { Context } from "../context/Context";
import { Seconds } from "../type/Units";
/**
 * Wrapper around the OfflineAudioContext
 * @category Core
 */
export declare class OfflineContext extends Context {
    readonly name: string;
    /**
     *  A private reference to the duration
     */
    private readonly _duration;
    /**
     *  An artificial clock source
     */
    private _currentTime;
    /**
     * Private reference to the OfflineAudioContext.
     */
    protected _context: OfflineAudioContext;
    /**
     * @param  channels  The number of channels to render
     * @param  duration  The duration to render in seconds
     * @param sampleRate the sample rate to render at
     */
    constructor(channels: number, duration: Seconds, sampleRate: number);
    constructor(context: OfflineAudioContext);
    /**
     *  Override the now method to point to the internal clock time
     */
    now(): Seconds;
    /**
     * Same as this.now()
     */
    readonly currentTime: Seconds;
    /**
     *  Render the output of the OfflineContext
     */
    render(): Promise<AudioBuffer>;
    /**
     *  Close the context
     */
    close(): Promise<void>;
}
